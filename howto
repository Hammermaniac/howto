#!/bin/bash

# Declare book name in ${books} array, e.g. books=( "mybook" "git" )
# Then create a file in ~/.common-configs/ using the naming convention: howtos.mybook
#
# So the above should be:
#   ~/.common-configs/howtos.mybook
#   ~/.common-configs/howtos.git

# VARIABLES
books=( "void" "term" )
n=$#
args=("$@")

# FUNCTIONS
displayhelp() {
	echo
	echo "Usage: howto [OPTION]... [STRING1] [STRING2]..."
	echo "Or:    howto [OPTION]... [BOOK_NAME] [STRING1]..."
	echo
	echo "Options:"
	echo
	echo "  -h, --help       Display this help text."
	echo "  -n, --nocolor    Don't use colors with output."
	echo "  -b, --books      Display all book names configured in the script."
	echo "  -u, --usebook    Only search in the specified book."
	echo "  -a, --allbooks   Search all books simultaneously."
	echo
        echo "Specifying a book name as an argument will search for the given string in the specified book."
        echo "Example, assume book name is 'mybook':"
        echo "howto mybook 'git config'"
	echo 
	echo
	echo "TIP: Specify a ':' as the search string to print all entries of any book."
	echo
}

legacy() {
	for n do {
		# Escape if we run out of arguments.
		if [ $# -eq 0 ] ; then
			exit 0
		fi
		# If argument is a book title (i.e in ${books} array), use the specified book.
		if [[ "${books[@]}" =~ "$1" ]]
		then
			book="/home/$USER/.common-configs/howto.$1"
			shift
			if [ $# -eq 0 ] ; then
				echo -e "Error: No arguments supplied after book."
				displayhelp
			fi
		else
			book="/home/$USER/.common-configs/howto.main"
		fi
		echo
		# Find supplied argument (keyword) in book and display.
		grep -i "$1" "$book" | while read -r line
		do
			if [ "$1" == '' ] ; then
				break
			fi
			echo -e "\033[36m——————————————————————————————————\033[0m"
			line=$(printf '%b\n' "$( echo -e "$line" | sed ''/": "/s//:`printf "\033[1;36m——————————————————————————————————\033[0m"`/'' | sed 's/——————————————————————————————————/\n——————————————————————————————————\n/' )")
			echo -e "$line\n\n"
		done
		shift
	} done
}

# Exit if no arguments are supplied, nothing to do.
if [ $# -eq 0 ] ; then
	displayhelp
	exit 1
fi

while [ ! "$#" -eq 0 ]
do
	case "$1" in
		-h|--help) # Display the help text.
			displayhelp # Call the displayhelp function.
			exit 0
			;;
		-n|--nocolor) # Don't use colors with script output.
			nocolor # Call the nocolor function.
			shift
			;;
		-b|--books) # Display all book names.
			displaybooks
			exit 0
			;;
		-u|--usebook) # Only search in specific book.
			shift
			book="/home/$USER/.common-configs/howto.$1"
			legacy "$@"
			;;
		-a|--allbooks) # Search all books for provided string.
			allbooks
			shift
			;;
		--)
			break
			;;
		-*)
			echo "Invalid option: '$1'"
			echo "Try '$0 --help' for more information."
			exit 1
			;;
		*)
			legacy "$@"
			exit 0
			;;
	esac
done
